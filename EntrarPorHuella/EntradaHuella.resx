<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>